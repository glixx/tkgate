//: version "2.0"
//: property prefix = "_GG"
//: property title = "Welcome to TkGate Page"
//: property discardChanges = 1

//: /symbolBegin: 140725520
//: /iconBegin normal 2990 3 3
//: /data "#define bitmap_width 57"
//: /data "#define bitmap_height 58"
//: /data "static unsigned char bitmap_bits[] = {"
//: /data "   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x01, 0x00, 0x00, 0x00,"
//: /data "   0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,"
//: /data "   0x01, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x80, 0x02,"
//: /data "   0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x80, 0x92, 0x02, 0x00, 0x00, 0x01,"
//: /data "   0x01, 0x00, 0xc0, 0x97, 0x05, 0x00, 0x00, 0x01, 0x01, 0x00, 0x40, 0x94,"
//: /data "   0x04, 0x00, 0x00, 0x01, 0x01, 0x00, 0x40, 0x94, 0x04, 0x00, 0x00, 0x01,"
//: /data "   0x01, 0x00, 0x40, 0x94, 0x04, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00,"
//: /data "   0x00, 0x00, 0x00, 0x01, 0x71, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,"
//: /data "   0x09, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x09, 0x14, 0xf8, 0xff,"
//: /data "   0xff, 0xff, 0x1f, 0x01, 0x71, 0x3e, 0x08, 0x00, 0x00, 0x00, 0x10, 0x01,"
//: /data "   0x81, 0x22, 0x08, 0x00, 0x00, 0x00, 0x10, 0x01, 0x81, 0x22, 0xf8, 0xff,"
//: /data "   0xff, 0xff, 0x1f, 0x01, 0x71, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,"
//: /data "   0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00,"
//: /data "   0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,"
//: /data "   0x01, 0x00, 0xf8, 0xff, 0xff, 0xff, 0x1f, 0x01, 0x01, 0x00, 0x08, 0x00,"
//: /data "   0x00, 0x00, 0x10, 0x01, 0x01, 0x00, 0x08, 0x00, 0x00, 0x00, 0x10, 0x01,"
//: /data "   0x01, 0x00, 0xf8, 0xff, 0xff, 0xff, 0x1f, 0x01, 0x71, 0x1e, 0x00, 0x00,"
//: /data "   0x00, 0x00, 0x00, 0x01, 0x09, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,"
//: /data "   0x09, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x71, 0x1e, 0x00, 0x00,"
//: /data "   0x00, 0x00, 0x00, 0x01, 0x81, 0x22, 0xf8, 0xff, 0xff, 0xff, 0x1f, 0x01,"
//: /data "   0x81, 0x22, 0x08, 0x00, 0x00, 0x00, 0x10, 0x01, 0x71, 0x1e, 0x08, 0x00,"
//: /data "   0x00, 0x00, 0x10, 0x01, 0x01, 0x00, 0xf8, 0xff, 0xff, 0xff, 0x1f, 0x01,"
//: /data "   0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00,"
//: /data "   0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x01,"
//: /data "   0x01, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00,"
//: /data "   0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,"
//: /data "   0x01, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x01, 0x03, 0x00, 0x00, 0x00,"
//: /data "   0x0c, 0x00, 0x00, 0x01, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,"
//: /data "   0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x11, 0x00, 0x00, 0x00,"
//: /data "   0x0c, 0x00, 0x00, 0x01, 0x09, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x01,"
//: /data "   0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x00, 0x00, 0x00,"
//: /data "   0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,"
//: /data "   0x01, 0x02, 0x00, 0x01, 0x1e, 0x00, 0x04, 0x01, 0x01, 0x05, 0x00, 0x01,"
//: /data "   0x22, 0x00, 0x04, 0x01, 0x01, 0xc5, 0xa4, 0x03, 0x22, 0x93, 0x0e, 0x01,"
//: /data "   0x81, 0x2f, 0x25, 0x01, 0x9e, 0x94, 0x04, 0x01, 0x81, 0x28, 0x25, 0x01,"
//: /data "   0xa2, 0x94, 0x04, 0x01, 0x81, 0x28, 0x25, 0x09, 0xa2, 0x94, 0x24, 0x01,"
//: /data "   0x81, 0xc8, 0x38, 0x06, 0x1e, 0xe3, 0x18, 0x01, 0x01, 0x00, 0x00, 0x00,"
//: /data "   0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,"
//: /data "   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01};"
//: /iconEnd
//: /iconBegin select 2990 3 3
//: /data "#define bitmap_width 57"
//: /data "#define bitmap_height 58"
//: /data "static unsigned char bitmap_bits[] = {"
//: /data "   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0xff, 0xff, 0xff, 0xff,"
//: /data "   0xff, 0xff, 0xff, 0x01, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01,"
//: /data "   0x03, 0x00, 0x00, 0x11, 0x00, 0x00, 0x80, 0x01, 0x03, 0x00, 0x80, 0x02,"
//: /data "   0x00, 0x00, 0x80, 0x01, 0x03, 0x00, 0x80, 0x92, 0x02, 0x00, 0x80, 0x01,"
//: /data "   0x03, 0x00, 0xc0, 0x97, 0x05, 0x00, 0x80, 0x01, 0x03, 0x00, 0x40, 0x94,"
//: /data "   0x04, 0x00, 0x80, 0x01, 0x03, 0x00, 0x40, 0x94, 0x04, 0x00, 0x80, 0x01,"
//: /data "   0x03, 0x00, 0x40, 0x94, 0x04, 0x00, 0x80, 0x01, 0x03, 0x00, 0x00, 0x00,"
//: /data "   0x00, 0x00, 0x80, 0x01, 0x73, 0x08, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01,"
//: /data "   0x0b, 0x14, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x0b, 0x14, 0xf8, 0xff,"
//: /data "   0xff, 0xff, 0x9f, 0x01, 0x73, 0x3e, 0x08, 0x00, 0x00, 0x00, 0x90, 0x01,"
//: /data "   0x83, 0x22, 0x08, 0x00, 0x00, 0x00, 0x90, 0x01, 0x83, 0x22, 0xf8, 0xff,"
//: /data "   0xff, 0xff, 0x9f, 0x01, 0x73, 0x22, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01,"
//: /data "   0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x03, 0x00, 0x00, 0x00,"
//: /data "   0x00, 0x00, 0x80, 0x01, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01,"
//: /data "   0x03, 0x00, 0xf8, 0xff, 0xff, 0xff, 0x9f, 0x01, 0x03, 0x00, 0x08, 0x00,"
//: /data "   0x00, 0x00, 0x90, 0x01, 0x03, 0x00, 0x08, 0x00, 0x00, 0x00, 0x90, 0x01,"
//: /data "   0x03, 0x00, 0xf8, 0xff, 0xff, 0xff, 0x9f, 0x01, 0x73, 0x1e, 0x00, 0x00,"
//: /data "   0x00, 0x00, 0x80, 0x01, 0x0b, 0x22, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01,"
//: /data "   0x0b, 0x22, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x73, 0x1e, 0x00, 0x00,"
//: /data "   0x00, 0x00, 0x80, 0x01, 0x83, 0x22, 0xf8, 0xff, 0xff, 0xff, 0x9f, 0x01,"
//: /data "   0x83, 0x22, 0x08, 0x00, 0x00, 0x00, 0x90, 0x01, 0x73, 0x1e, 0x08, 0x00,"
//: /data "   0x00, 0x00, 0x90, 0x01, 0x03, 0x00, 0xf8, 0xff, 0xff, 0xff, 0x9f, 0x01,"
//: /data "   0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x03, 0x00, 0x00, 0x00,"
//: /data "   0x00, 0x00, 0x80, 0x01, 0x03, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x80, 0x01,"
//: /data "   0x03, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x80, 0x01, 0x03, 0x00, 0x00, 0x00,"
//: /data "   0x00, 0x00, 0x80, 0x01, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01,"
//: /data "   0x03, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x80, 0x01, 0x03, 0x00, 0x00, 0x00,"
//: /data "   0x0c, 0x00, 0x80, 0x01, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01,"
//: /data "   0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x13, 0x00, 0x00, 0x00,"
//: /data "   0x0c, 0x00, 0x80, 0x01, 0x0b, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x80, 0x01,"
//: /data "   0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x03, 0x00, 0x00, 0x00,"
//: /data "   0x00, 0x00, 0x80, 0x01, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01,"
//: /data "   0x03, 0x02, 0x00, 0x01, 0x1e, 0x00, 0x84, 0x01, 0x03, 0x05, 0x00, 0x01,"
//: /data "   0x22, 0x00, 0x84, 0x01, 0x03, 0xc5, 0xa4, 0x03, 0x22, 0x93, 0x8e, 0x01,"
//: /data "   0x83, 0x2f, 0x25, 0x01, 0x9e, 0x94, 0x84, 0x01, 0x83, 0x28, 0x25, 0x01,"
//: /data "   0xa2, 0x94, 0x84, 0x01, 0x83, 0x28, 0x25, 0x09, 0xa2, 0x94, 0xa4, 0x01,"
//: /data "   0x83, 0xc8, 0x38, 0x06, 0x1e, 0xe3, 0x98, 0x01, 0x03, 0x00, 0x00, 0x00,"
//: /data "   0x00, 0x00, 0x80, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01,"
//: /data "   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01};"
//: /iconEnd
//: /port input SA[1:0] @(2, 16) /r:2
//: /port input AIN[7:0] @(31, 2) /r:1
//: /port output AOUT[7:0] @(19, 61) /r:3
//: /port input SB[1:0] @(2, 31) /r:2
//: /port output BOUT[7:0] @(46, 61) /r:3
//: /port input ck @(2, 46) /r:2
//: /symbolEnd

//: /symbolBegin: 140653072
//: /iconBegin normal 2990 3 3
//: /data "#define bitmap_width 57"
//: /data "#define bitmap_height 58"
//: /data "static unsigned char bitmap_bits[] = {"
//: /data "   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x01, 0x00, 0x00, 0x00,"
//: /data "   0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,"
//: /data "   0x01, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x80, 0x02,"
//: /data "   0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x80, 0x92, 0x02, 0x00, 0x00, 0x01,"
//: /data "   0x01, 0x00, 0xc0, 0x97, 0x05, 0x00, 0x00, 0x01, 0x01, 0x00, 0x40, 0x94,"
//: /data "   0x04, 0x00, 0x00, 0x01, 0x01, 0x00, 0x40, 0x94, 0x04, 0x00, 0x00, 0x01,"
//: /data "   0x01, 0x00, 0x40, 0x94, 0x04, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00,"
//: /data "   0x00, 0x00, 0x00, 0x01, 0x71, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,"
//: /data "   0x09, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x09, 0x14, 0xf8, 0xff,"
//: /data "   0xff, 0xff, 0x1f, 0x01, 0x71, 0x3e, 0x08, 0x00, 0x00, 0x00, 0x10, 0x01,"
//: /data "   0x81, 0x22, 0x08, 0x00, 0x00, 0x00, 0x10, 0x01, 0x81, 0x22, 0xf8, 0xff,"
//: /data "   0xff, 0xff, 0x1f, 0x01, 0x71, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,"
//: /data "   0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00,"
//: /data "   0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,"
//: /data "   0x01, 0x00, 0xf8, 0xff, 0xff, 0xff, 0x1f, 0x01, 0x01, 0x00, 0x08, 0x00,"
//: /data "   0x00, 0x00, 0x10, 0x01, 0x01, 0x00, 0x08, 0x00, 0x00, 0x00, 0x10, 0x01,"
//: /data "   0x01, 0x00, 0xf8, 0xff, 0xff, 0xff, 0x1f, 0x01, 0x71, 0x1e, 0x00, 0x00,"
//: /data "   0x00, 0x00, 0x00, 0x01, 0x09, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,"
//: /data "   0x09, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x71, 0x1e, 0x00, 0x00,"
//: /data "   0x00, 0x00, 0x00, 0x01, 0x81, 0x22, 0xf8, 0xff, 0xff, 0xff, 0x1f, 0x01,"
//: /data "   0x81, 0x22, 0x08, 0x00, 0x00, 0x00, 0x10, 0x01, 0x71, 0x5e, 0x08, 0x00,"
//: /data "   0x00, 0x00, 0x10, 0x01, 0x01, 0x40, 0xf8, 0xff, 0xff, 0xff, 0x1f, 0x01,"
//: /data "   0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x80, 0x00, 0x00,"
//: /data "   0x00, 0x00, 0x00, 0x01, 0x01, 0x80, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x01,"
//: /data "   0x01, 0x00, 0x01, 0xc0, 0x0c, 0x00, 0x00, 0x01, 0x01, 0x00, 0x03, 0x30,"
//: /data "   0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x01, 0x0e, 0x00, 0x00, 0x00, 0x01,"
//: /data "   0x01, 0x00, 0x80, 0x03, 0x0c, 0x00, 0x00, 0x01, 0x03, 0x00, 0xe0, 0x00,"
//: /data "   0x0c, 0x00, 0x00, 0x01, 0x05, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x01,"
//: /data "   0x09, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x01, 0x11, 0x00, 0x04, 0x00,"
//: /data "   0x0c, 0x00, 0x00, 0x01, 0x09, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x01,"
//: /data "   0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x00, 0x00, 0x00,"
//: /data "   0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,"
//: /data "   0x01, 0x02, 0x00, 0x01, 0x1e, 0x00, 0x04, 0x01, 0x01, 0x05, 0x00, 0x01,"
//: /data "   0x22, 0x00, 0x04, 0x01, 0x01, 0xc5, 0xa4, 0x03, 0x22, 0x93, 0x0e, 0x01,"
//: /data "   0x81, 0x2f, 0x25, 0x01, 0x9e, 0x94, 0x04, 0x01, 0x81, 0x28, 0x25, 0x01,"
//: /data "   0xa2, 0x94, 0x04, 0x01, 0x81, 0x28, 0x25, 0x09, 0xa2, 0x94, 0x24, 0x01,"
//: /data "   0x81, 0xc8, 0x38, 0x06, 0x1e, 0xe3, 0x18, 0x01, 0x01, 0x00, 0x00, 0x00,"
//: /data "   0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,"
//: /data "   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01};"
//: /iconEnd
//: /iconBegin select 2990 3 3
//: /data "#define bitmap_width 57"
//: /data "#define bitmap_height 58"
//: /data "static unsigned char bitmap_bits[] = {"
//: /data "   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0xff, 0xff, 0xff, 0xff,"
//: /data "   0xff, 0xff, 0xff, 0x01, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01,"
//: /data "   0x03, 0x00, 0x00, 0x11, 0x00, 0x00, 0x80, 0x01, 0x03, 0x00, 0x80, 0x02,"
//: /data "   0x00, 0x00, 0x80, 0x01, 0x03, 0x00, 0x80, 0x92, 0x02, 0x00, 0x80, 0x01,"
//: /data "   0x03, 0x00, 0xc0, 0x97, 0x05, 0x00, 0x80, 0x01, 0x03, 0x00, 0x40, 0x94,"
//: /data "   0x04, 0x00, 0x80, 0x01, 0x03, 0x00, 0x40, 0x94, 0x04, 0x00, 0x80, 0x01,"
//: /data "   0x03, 0x00, 0x40, 0x94, 0x04, 0x00, 0x80, 0x01, 0x03, 0x00, 0x00, 0x00,"
//: /data "   0x00, 0x00, 0x80, 0x01, 0x73, 0x08, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01,"
//: /data "   0x0b, 0x14, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x0b, 0x14, 0xf8, 0xff,"
//: /data "   0xff, 0xff, 0x9f, 0x01, 0x73, 0x3e, 0x08, 0x00, 0x00, 0x00, 0x90, 0x01,"
//: /data "   0x83, 0x22, 0x08, 0x00, 0x00, 0x00, 0x90, 0x01, 0x83, 0x22, 0xf8, 0xff,"
//: /data "   0xff, 0xff, 0x9f, 0x01, 0x73, 0x22, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01,"
//: /data "   0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x03, 0x00, 0x00, 0x00,"
//: /data "   0x00, 0x00, 0x80, 0x01, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01,"
//: /data "   0x03, 0x00, 0xf8, 0xff, 0xff, 0xff, 0x9f, 0x01, 0x03, 0x00, 0x08, 0x00,"
//: /data "   0x00, 0x00, 0x90, 0x01, 0x03, 0x00, 0x08, 0x00, 0x00, 0x00, 0x90, 0x01,"
//: /data "   0x03, 0x00, 0xf8, 0xff, 0xff, 0xff, 0x9f, 0x01, 0x73, 0x1e, 0x00, 0x00,"
//: /data "   0x00, 0x00, 0x80, 0x01, 0x0b, 0x22, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01,"
//: /data "   0x0b, 0x22, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x73, 0x1e, 0x00, 0x00,"
//: /data "   0x00, 0x00, 0x80, 0x01, 0x83, 0x22, 0xf8, 0xff, 0xff, 0xff, 0x9f, 0x01,"
//: /data "   0x83, 0x22, 0x08, 0x00, 0x00, 0x00, 0x90, 0x01, 0x73, 0x1e, 0x08, 0x00,"
//: /data "   0x00, 0x00, 0x90, 0x01, 0x03, 0x00, 0xf8, 0xff, 0xff, 0xff, 0x9f, 0x01,"
//: /data "   0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x03, 0x00, 0x00, 0x00,"
//: /data "   0x00, 0x00, 0x80, 0x01, 0x03, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x80, 0x01,"
//: /data "   0x03, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x80, 0x01, 0x03, 0x00, 0x00, 0x00,"
//: /data "   0x00, 0x00, 0x80, 0x01, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01,"
//: /data "   0x03, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x80, 0x01, 0x03, 0x00, 0x00, 0x00,"
//: /data "   0x0c, 0x00, 0x80, 0x01, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01,"
//: /data "   0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x13, 0x00, 0x00, 0x00,"
//: /data "   0x0c, 0x00, 0x80, 0x01, 0x0b, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x80, 0x01,"
//: /data "   0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x03, 0x00, 0x00, 0x00,"
//: /data "   0x00, 0x00, 0x80, 0x01, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01,"
//: /data "   0x03, 0x02, 0x00, 0x01, 0x1e, 0x00, 0x84, 0x01, 0x03, 0x05, 0x00, 0x01,"
//: /data "   0x22, 0x00, 0x84, 0x01, 0x03, 0xc5, 0xa4, 0x03, 0x22, 0x93, 0x8e, 0x01,"
//: /data "   0x83, 0x2f, 0x25, 0x01, 0x9e, 0x94, 0x84, 0x01, 0x83, 0x28, 0x25, 0x01,"
//: /data "   0xa2, 0x94, 0x84, 0x01, 0x83, 0x28, 0x25, 0x09, 0xa2, 0x94, 0xa4, 0x01,"
//: /data "   0x83, 0xc8, 0x38, 0x06, 0x1e, 0xe3, 0x98, 0x01, 0x03, 0x00, 0x00, 0x00,"
//: /data "   0x00, 0x00, 0x80, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01,"
//: /data "   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01};"
//: /iconEnd
//: /port input AIN[7:0] @(31, 2) /r:1
//: /port input SA[1:0] @(2, 16) /r:2
//: /port input SB[1:0] @(2, 31) /r:2
//: /port input ck @(2, 46) /r:2
//: /port output AOUT[7:0] @(19, 61) /r:3
//: /port output BOUT[7:0] @(46, 61) /r:3
//: /port output COUT[7:0] @(45, 61) /r:3
//: /symbolEnd

//: /netlistBegin main
module main;    //: root_module
reg [1:0] w21;    //: /sn:0 /dp:1 {0}(314,343)(274,343)(274,308)(268,308){1}
reg w28;    //: /sn:0 {0}(247,148)(267,148)(267,148)(296,148){1}
reg [1:0] w23;    //: /sn:0 /dp:1 {0}(314,358)(304,358)(304,358)(268,358){1}
reg [7:0] w25;    //: /sn:0 {0}(268,88)(309,88)(309,132){1}
reg [1:0] w26;    //: /sn:0 /dp:1 {0}(268,211)(289,211)(289,248)(298,248){1}
wire [7:0] w14;    //: /sn:0 {0}(331,388)(331,425)(426,425)(426,117)(393,117){1}
//: {2}(391,115)(391,98){3}
//: {4}(389,117)(329,117)(329,132){5}
wire [7:0] w30;    //: /sn:0 {0}(358,388)(358,400)(406,400)(406,190)(393,190){1}
//: {2}(391,188)(391,175){3}
//: {4}(389,190)(366,190)(366,219){5}
wire [7:0] w12;    //: /sn:0 {0}(343,329)(343,301)(343,301)(343,286){1}
wire w33;    //: /sn:0 {0}(314,373)(264,373)(264,409)(237,409){1}
wire [7:0] w29;    //: /sn:0 /dp:1 {0}(319,219)(319,161){1}
//: enddecls

  _GGCLOCK_P200_0_50 g51 (.Z(w33));   //: @(224,409) /sn:0 /w:[ 1 ] /omega:200 /phi:0 /duty:50
  REGS g2 (.SA(w21), .AIN(w12), .AOUT(w14), .SB(w23), .BOUT(w30), .ck(w33));   //: @(343, 359) /symbol:140725520 /sn:0 /w:[ 0 0 0 0 0 0 ]
  //: LED g59 (w30) @(391,168) /sn:0 /w:[ 3 ] /type:2
  //: joint g16 (w30) @(391, 190) /w:[ 1 2 4 -1 ]
  //: DIP sa (w21) @(230,308) /R:1 /w:[ 1 ] /st:0
  _GGMUX2x8 #(8, 8) g53 (.I0(w25), .I1(w14), .S(w28), .Z(w29));   //: @(319,148) /sn:0 /w:[ 1 5 1 1 ] /ss:0 /do:0
  //: DIP sb (w23) @(230,358) /R:1 /w:[ 1 ] /st:1
  ALU alu (.B(w30), .A(w29), .F(w26), .Z(w12));   //: @(299, 220) /sz:(89, 65) /p:[ Ti0>5 Ti1>0 Li0>1 Bo0<1 ]
  //: DIP func (w26) @(230,211) /R:1 /w:[ 0 ] /st:0
  //: LED g62 (w14) @(391,91) /sn:0 /w:[ 3 ] /type:2
  //: joint g17 (w14) @(391, 117) /w:[ 1 2 4 -1 ]
  //: DIP data_in (w25) @(230,88) /R:1 /w:[ 0 ] /st:11
  //: SWITCH data_select (w28) @(230,148) /w:[ 0 ] /st:0

endmodule
//: /netlistEnd

//: /netlistBegin ALU
module ALU(F, A, B, Z);
//: interface  /sz:(89, 65) /bd:[ Ti0>A[7:0](20/89) Ti1>B[7:0](67/89) Li0>F[1:0](28/65) Bo0<Z[7:0](44/89) ]
input [7:0] B;    //: /sn:0 {0}(342,147)(342,184){1}
//: {2}(344,186)(367,186){3}
//: {4}(371,186)(425,186)(425,258){5}
//: {6}(369,188)(369,261){7}
//: {8}(342,188)(342,258){9}
input [1:0] F;    //: /sn:0 /dp:1 {0}(343,353)(214,353){1}
supply0 w0;    //: /sn:0 {0}(491,295)(491,272)(465,272){1}
input [7:0] A;    //: /sn:0 {0}(265,147)(265,215){1}
//: {2}(267,217)(345,217){3}
//: {4}(349,217)(372,217){5}
//: {6}(376,217)(457,217)(457,258){7}
//: {8}(374,219)(374,261){9}
//: {10}(347,219)(347,258){11}
//: {12}(265,219)(265,322)(348,322)(348,337){13}
output [7:0] Z;    //: /sn:0 {0}(366,404)(366,366){1}
wire [7:0] w14;    //: /sn:0 {0}(345,279)(345,310)(360,310)(360,337){1}
wire w4;    //: /sn:0 {0}(417,272)(407,272){1}
wire [7:0] w11;    //: /sn:0 {0}(372,282)(372,337){1}
wire [7:0] w10;    //: /sn:0 /dp:1 {0}(384,337)(384,307)(441,307)(441,287){1}
//: enddecls

  _GGADD8 #(68, 70, 62, 64) g4 (.A(B), .B(A), .S(w10), .CI(w0), .CO(w4));   //: @(441,274) /sn:0 /w:[ 5 7 1 1 0 ]
  //: joint g8 (A) @(347, 217) /w:[ 4 -1 3 10 ]
  //: IN g3 (F) @(212,353) /sn:0 /w:[ 1 ]
  //: GROUND g13 (w0) @(491,301) /sn:0 /w:[ 0 ]
  //: IN g2 (A) @(265,145) /sn:0 /R:3 /w:[ 0 ]
  //: IN g1 (B) @(342,145) /sn:0 /R:3 /w:[ 0 ]
  //: joint g11 (B) @(369, 186) /w:[ 4 -1 3 6 ]
  //: joint g10 (A) @(374, 217) /w:[ 6 -1 5 8 ]
  _GGAND2x8 #(6) g6 (.I0(B), .I1(A), .Z(w11));   //: @(372,272) /sn:0 /R:3 /w:[ 7 9 0 ] /eb:0
  _GGOR2x8 #(6) g7 (.I0(B), .I1(A), .Z(w14));   //: @(345,269) /sn:0 /R:3 /w:[ 9 11 0 ] /eb:0
  //: joint g9 (A) @(265, 217) /w:[ 2 1 -1 12 ]
  //: OUT g5 (Z) @(366,401) /sn:0 /R:3 /w:[ 0 ]
  _GGMUX4x8 #(12, 12) g0 (.I0(A), .I1(w14), .I2(w11), .I3(w10), .S(F), .Z(Z));   //: @(366,353) /sn:0 /w:[ 13 1 1 0 0 1 ] /ss:0 /do:0
  //: joint g12 (B) @(342, 186) /w:[ 2 1 -1 8 ]

endmodule
//: /netlistEnd

//: /netlistBegin REGS
module REGS(SB, SA, BOUT, AOUT, ck, AIN);
//: /symbol:140653072
//: interface  /sz:(40, 40) /bd:[ ]
//: property pptype=0
supply1 w0;    //: /sn:0 /dp:1 {0}(368,281)(380,281)(380,262){1}
supply1 w21;    //: /sn:0 /dp:1 {0}(267,134)(188,134)(188,96){1}
input [1:0] SB;    //: /sn:0 {0}(514,430)(577,430){1}
supply1 w1;    //: /sn:0 /dp:1 {0}(513,281)(526,281)(526,262){1}
output [7:0] BOUT;    //: /sn:0 {0}(600,472)(600,443){1}
input [1:0] SA;    //: /sn:0 {0}(389,430)(99,430)(99,61){1}
//: {2}(101,59)(291,59)(291,121){3}
//: {4}(97,59)(54,59){5}
supply1 w2;    //: /sn:0 /dp:1 {0}(226,280)(238,280)(238,263){1}
input [7:0] AIN;    //: /sn:0 {0}(474,67)(474,208){1}
//: {2}(476,210)(633,210)(633,276){3}
//: {4}(472,210)(331,210){5}
//: {6}(327,210)(187,210)(187,275){7}
//: {8}(329,212)(329,276){9}
//: {10}(474,212)(474,276){11}
output [7:0] AOUT;    //: /sn:0 /dp:1 {0}(412,443)(412,472){1}
input ck;    //: /sn:0 {0}(58,315)(131,315){1}
//: {2}(135,315)(280,315){3}
//: {4}(284,315)(419,315){5}
//: {6}(423,315)(581,315)(581,286)(596,286){7}
//: {8}(421,313)(421,286)(437,286){9}
//: {10}(282,313)(282,286)(292,286){11}
//: {12}(133,313)(133,285)(150,285){13}
supply1 w5;    //: /sn:0 /dp:1 {0}(672,281)(687,281)(687,263){1}
wire w4;    //: /sn:0 {0}(297,150)(297,189)(562,189)(562,291)(513,291){1}
wire w3;    //: /sn:0 {0}(285,150)(285,204)(411,204)(411,291)(368,291){1}
wire [7:0] R2;    //: /dp:4 {0}(418,414)(418,355)(472,355){1}
//: {2}(476,355)(606,355)(606,414){3}
//: {4}(474,353)(474,297){5}
wire w20;    //: /sn:0 {0}(309,150)(309,171)(719,171)(719,291)(672,291){1}
wire [7:0] R1;    //: /dp:5 {0}(406,414)(406,345){1}
//: {2}(408,343)(594,343)(594,414){3}
//: {4}(404,343)(329,343)(329,297){5}
wire [7:0] R3;    //: /dp:3 {0}(430,414)(430,370)(616,370){1}
//: {2}(620,370)(633,370)(633,297){3}
//: {4}(618,372)(618,414){5}
wire w8;    //: /sn:0 /dp:1 {0}(226,290)(273,290)(273,150){1}
wire [7:0] R0;    //: /dp:3 {0}(582,414)(582,383)(396,383){1}
//: {2}(392,383)(187,383)(187,296){3}
//: {4}(394,385)(394,414){5}
//: enddecls

  //: IN g4 (SB) @(512,430) /sn:0 /w:[ 0 ]
  _GGREG8 #(10, 10, 20) g8 (.Q(R3), .D(AIN), .EN(w20), .CLR(w5), .CK(ck));   //: @(633,286) /sn:0 /w:[ 3 3 1 0 7 ]
  //: IN g3 (SA) @(52,59) /sn:0 /w:[ 5 ]
  _GGMUX4x8 #(12, 12) g13 (.I0(R0), .I1(R1), .I2(R2), .I3(R3), .S(SB), .Z(BOUT));   //: @(600,430) /sn:0 /w:[ 0 3 3 5 1 1 ] /ss:0 /do:0
  //: OUT g2 (BOUT) @(600,469) /sn:0 /R:3 /w:[ 0 ]
  //: OUT g1 (AOUT) @(412,469) /sn:0 /R:3 /w:[ 1 ]
  //: joint g11 (ck) @(282, 315) /w:[ 4 10 3 -1 ]
  //: joint g16 (R0) @(394, 383) /w:[ 1 -1 2 4 ]
  //: VDD g10 (w21) @(199,96) /sn:0 /w:[ 1 ]
  //: joint g19 (R1) @(406, 343) /w:[ 2 -1 4 1 ]
  //: joint g27 (ck) @(133, 315) /w:[ 2 12 1 -1 ]
  _GGREG8 #(10, 10, 20) g6 (.Q(R1), .D(AIN), .EN(w3), .CLR(w0), .CK(ck));   //: @(329,286) /sn:0 /w:[ 5 9 1 0 11 ]
  _GGREG8 #(10, 10, 20) g7 (.Q(R2), .D(AIN), .EN(w4), .CLR(w1), .CK(ck));   //: @(474,286) /sn:0 /w:[ 5 11 1 0 9 ]
  _GGNDEMUX4 #(4, 4) g9 (.I(SA), .E(w21), .Z0(w8), .Z1(w3), .Z2(w4), .Z3(w20));   //: @(291,134) /sn:0 /w:[ 3 0 1 0 0 0 ] /ss:0 /do:0
  //: joint g20 (SA) @(99, 59) /w:[ 2 -1 4 1 ]
  _GGREG8 #(10, 10, 20) g15 (.Q(R0), .D(AIN), .EN(w8), .CLR(w2), .CK(ck));   //: @(187,285) /sn:0 /w:[ 3 7 0 0 13 ]
  //: joint g17 (R3) @(618, 370) /w:[ 2 -1 1 4 ]
  //: VDD g25 (w2) @(249,263) /sn:0 /w:[ 1 ]
  //: IN g5 (ck) @(56,315) /sn:0 /w:[ 0 ]
  _GGMUX4x8 #(12, 12) g14 (.I0(R0), .I1(R1), .I2(R2), .I3(R3), .S(SA), .Z(AOUT));   //: @(412,430) /sn:0 /w:[ 5 0 0 0 0 0 ] /ss:0 /do:0
  //: VDD g21 (w0) @(391,262) /sn:0 /w:[ 1 ]
  //: joint g24 (AIN) @(474, 210) /w:[ 2 1 4 10 ]
  //: VDD g23 (w5) @(698,263) /sn:0 /w:[ 1 ]
  //: IN g0 (AIN) @(474,65) /sn:0 /R:3 /w:[ 0 ]
  //: VDD g22 (w1) @(537,262) /sn:0 /w:[ 1 ]
  //: joint g26 (AIN) @(329, 210) /w:[ 5 -1 6 8 ]
  //: joint g12 (ck) @(421, 315) /w:[ 6 8 5 -1 ]
  //: joint g18 (R2) @(474, 355) /w:[ 2 4 1 -1 ]

endmodule
//: /netlistEnd

//: /builtinBegin
module _GGREG8 #(.Dsetup(1), .Dhold(1), .Dck_q(1)) (Q, D, EN, CLR, CK);
input CK,EN,CLR;
input [7:0] D;
output [7:0] Q;
reg [7:0] Qreg;

  assign #Dck_q Q = Qreg;

  always @(posedge CK or negedge CLR)
    begin
    if (CLR === 1'b0)
      Qreg = 8'h0;
    else if (CK === 1'b1 && EN === 1'b0)
      Qreg = D;
    end

endmodule
//: /builtinEnd

//: /builtinBegin
module _GGMUX4x8 #(.Dsz(1), .Diz(1)) (I0, I1, I2, I3, S, Z);
input [7:0] I0, I1, I2, I3;
input [1:0] S;
output [7:0] Z;
reg [7:0] Z;

  always @(*)
    begin
      case (S)
          2'h0: Z <= #Dsz I0;
          2'h1: Z <= #Dsz I1;
          2'h2: Z <= #Dsz I2;
          2'h3: Z <= #Dsz I3;
        default: Z <= #Dsz  2'h0;
      endcase
    end

endmodule
//: /builtinEnd

//: /builtinBegin
module _GGOR2x8 #(.Diz(1)) (I0, I1, Z);
output [7:0] Z;
input [7:0] I0;
input [7:0] I1;

  assign #Diz Z = I0 | I1;

endmodule
//: /builtinEnd

//: /builtinBegin
module _GGADD8 #(.Dab_s(1), .Dab_co(1), .Dci_s(1), .Dci_co(1)) (A, B, S, CI, CO);
input CI;
output CO;
input [7:0] A,B;
output [7:0] S;

  specify
    (A,B *> S) = Dab_s;
    (A,B *> CO) = Dab_co;
    (CI *> S) = Dci_s;
    (CI *> CO) = Dci_co;
  endspecify

  assign {CO,S} = A + B + CI;

endmodule
//: /builtinEnd

//: /builtinBegin
module _GGNDEMUX4 #(.Dez(1), .Diz(1)) (I, E, Z0, Z1, Z2, Z3);
input [1:0] I;
input E;
output Z0, Z1, Z2, Z3;
wire [3:0] Zcat;
  assign Zcat = 4'b1 << I;
  assign #1 Z0 = ~(E & Zcat[0]);
  assign #1 Z1 = ~(E & Zcat[1]);
  assign #1 Z2 = ~(E & Zcat[2]);
  assign #1 Z3 = ~(E & Zcat[3]);

endmodule
//: /builtinEnd

//: /builtinBegin
module _GGAND2x8 #(.Diz(1)) (I0, I1, Z);
output [7:0] Z;
input [7:0] I0;
input [7:0] I1;

  assign #Diz Z = I0 & I1;

endmodule
//: /builtinEnd

//: /builtinBegin
module _GGMUX2x8 #(.Dsz(1), .Diz(1)) (I0, I1, S, Z);
input [7:0] I0, I1;
input S;
output [7:0] Z;
reg [7:0] Z;

  always @(*)
    begin
      case (S)
          1'h0: Z <= #Dsz I0;
          1'h1: Z <= #Dsz I1;
        default: Z <= #Dsz  1'h0;
      endcase
    end

endmodule
//: /builtinEnd

//: /builtinBegin
module _GGCLOCK_P200_0_50 (Z);
output Z;
reg Z;

initial #0
  begin 
    forever
      begin
        Z = 1'b0;
        #100;
        Z = 1'b1;
        #100;
      end
   end

endmodule
//: /builtinEnd
